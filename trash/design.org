*  Requirements
** Long layer & short layers suceeding
#+ATTR_ORG: :width 750 
[[./img/design_2020_11_23__20:27:29.png]]

** internal loops in larger loop
'I never dream' woohoo
** insertion and deletion 
insert new scenes
delete scenes
have scene repeat for longer

** shifting
move layer start positions around
change layer blast into layer build up

** Record layers that do not loop
#+ATTR_ORG: :width 750 
[[./img/design_2020_11_23__21:00:08.png]]

need a way to record that does not automatically loop the buffer afterwards. 
need it to be 'detached' from sections.
** record new sections, but keep some layers of previous one.
if sections will indicate start of layers, one may want to have a couple layers
always looping, and to change the loop of another couple of layers.

for example, 'I never dream', where the layered vocals come in and start
changing loops.

** transitions
#+ATTR_ORG: :width 750 
[[./img/design_2020_11_23__21:15:15.png]]

add non repeating layers that attenuate layers or add content around section switches.
** partial scene changes
#+ATTR_ORG: :width 750 
[[./img/design_2020_11_23__21:23:54.png]]
** layer multiple non repeating layers onto a repeating scene
#+ATTR_ORG: :width 750 
[[./img/design_2020_11_23__21:28:51.png]]
** copy and paste layers at points of timeline
may want to reuse a now attenuated buffer.
** quickly undo mistakes 
** continuous record and 'catch' good recording
- IMPL: can be done by setting the attenuated layer to be the newest one and going all
  the way into attenuate mode.
** take recording
** DONE external phase
CLOSED: [2020-11-24 Tue 15:57]
** way to record in 'dry' mode, to practice delta movement before recording
** move from full attenuation extend mode to full dub mode 

* Oscular
** Glossary
| term  | definition                                                           |
|-------+----------------------------------------------------------------------|
| block | a block in the interface associated with a macro                     |
| macro | a strip of modules in VCV Rack, with inputs, parameters, and outputs   |

** OSC Protocol
~/block/#/knob/#/value~
| address                | type    | purpose                                                   |
|------------------------+---------+-----------------------------------------------------------|
| ~/block/#/*~             | value   | address of a block                                       |
| ~/block/#/select~        | toggle  | toggles selection of block                                |
| ~/block/#/knob/#/value~  | value   | value of knob                                             |
| ~/block/#/knob/#/text~   | string  | knob label                                                |
| ~/block/#/knob/#/select~ | toggle  | toggles selection of knob                                 |
| ~/block/#/knob/next~     | trigger | changes knobs to control next 4 inputs/outputs/parameters |
| ~/block/#/knob/prev~     | trigger | changes knobs to control prev 4 inputs/outputs/parameters |
** Gko
*** Manifest 
- Trigger recording by engaging.
- Higher strength will attenuate the neighbours of the module. The neighbours are the recording
  modules parent's (the module it sends to) children.
** Custom OSC Widgets
*** [#A] Macro Routing Graph
*** [#C] Synesthesia Visualizer (low priority)
a dream
** Milestones
*** Instrument
*** Instrument + Composition Tool
** Proposal Video
*** VCV Rack interface
A replacement  for all your synthesizers and fx.

*** Shopping
Every synthesizer is like a collection of lego blocks doing something.
VCV Rack is an arbitrary collection of lego blocks.
https://www.amazon.com/synthesizers/s?k=synthesizers

